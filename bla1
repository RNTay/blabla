from numpy import array
c, T = 1.5, 10
def Y(t):    # exact solution
    return array([(1+t*c*(c-1))/(1+t*(c-1))])
def f(t,y):  # right hand side
    return array([ (c-y[0])**2 ])
def Df(t,y): # Jacobian of right hand side (not needed here)
    return array([ 2*(c-y[0]) ])

t,y = evolve( forwardEuler, f, Df, 0, Y(0), T, 20)
print("number of steps = %d "     % len(y))
print("initial conditions = %1.3e  " % y[0])
print("error at final step = %1.3e  " % abs(y[-1]-Y(T)))
